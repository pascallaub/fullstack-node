services:
  database:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: "meinnotizblockuser"
      POSTGRES_PASSWORD: "EinSehrSicheresPasswort!"
      POSTGRES_DB: "notizblock_prod_db"
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    networks:
      - app-net
    deploy:
      placement:
        constraints:
          - node.labels.role == database
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -q"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    image: mephisto1339/backend-image:latest
    environment:
      PORT: 3000
      NODE_ENV: production
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: "meinnotizblockuser"
      DB_NAME: "notizblock_prod_db"
      DB_PASSWORD: "EinSehrSicheresPasswort!"
    volumes:
      - backend_data:/usr/src/app/data
    networks:
      - app-net
    depends_on:
      - database
    deploy:
      placement:
        constraints:
          - node.labels.role == backend
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 1024M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    image: mephisto1339/frontend-image:latest
    ports:
      - "8080:80"
    networks:
      - app-net
    depends_on:
      - backend
    deploy:
      placement:
        constraints:
          - node.labels.role == frontend
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 256M

volumes:
  postgres_db_data:
  backend_data:

networks:
  app-net:
    driver: overlay
