{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myapp-chart.fullname" . }}-backend
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "myapp-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "myapp-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "myapp-chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      containers:
      - name: backend
        image: "{{ .Values.global.imageRegistry }}{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: DB_HOST
          value: "{{ .Values.backend.env.dbHost }}"
        - name: DB_PORT
          value: "{{ .Values.backend.env.dbPort }}"
        - name: DB_USER
          value: "{{ .Values.backend.env.dbUser }}"
        - name: DB_NAME
          value: "{{ .Values.backend.env.dbName }}"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.dbCredentials.name }}
              key: POSTGRES_PASSWORD
        resources:
          {{- toYaml .Values.backend.resources | nindent 12 }}
{{- end }}