apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-config-app-deployment
  labels:
    app: my-config-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-config-app
  template:
    metadata:
      labels:
        app: my-config-app
    spec:
      containers:
        - name: my-config-app-container
          image: mephisto1339/configapp:latest # <-- IMPORTANT: Replace with your image
          ports:
            - containerPort: 3000 # This should match the PORT your app listens on
          env:
            - name: PORT
              value: "3000"
            - name: GREETING_MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: my-app-config
                  key: GREETING_MESSAGE
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: my-app-config
                  key: LOG_LEVEL
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-app-secret
                  key: DB_PASSWORD
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: my-app-secret
                  key: API_KEY
          volumeMounts:
            - name: config-volume
              mountPath: /etc/app/config # Mounts the directory
            - name: secret-volume
              mountPath: /etc/app/secrets # Mounts the directory
      volumes:
        - name: config-volume
          configMap:
            name: my-app-config
            items: # Specify which keys to mount and their filenames
              - key: app.properties
                path: app.properties # This creates /etc/app/config/app.properties
        - name: secret-volume
          secret:
            secretName: my-app-secret
            items: # Specify which keys to mount and their filenames
              - key: credentials.txt
                path: credentials.txt # This creates /etc/app/secrets/credentials.txt
